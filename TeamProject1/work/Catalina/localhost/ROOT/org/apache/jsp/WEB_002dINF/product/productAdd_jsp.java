/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-02-27 07:32:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.product;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class productAdd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-2.0.0.jar", Long.valueOf(1708668266000L));
    _jspx_dependants.put("jar:file:/C:/GitCollabo/TeamProject1/src/main/webapp/WEB-INF/lib/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/c.tld", Long.valueOf(1602841572000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<style>\r\n");
      out.write("table {\r\n");
      out.write("	width: 600px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("textarea {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	width: 600px;\r\n");
      out.write("	height: 200px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Content {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input {\r\n");
      out.write("	width: 300px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input.img {\r\n");
      out.write("	width: 10px;\r\n");
      out.write("	height: 10px;\r\n");
      out.write("	border-radius: 50%; /* 동그라미를 만들기 위한 속성 */\r\n");
      out.write("	border: none;\r\n");
      out.write("	background-color: #808080;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    var previewIds = ['preview1', 'preview2', 'preview3'];\r\n");
      out.write("    var currentPreviewIndex = 0;\r\n");
      out.write("\r\n");
      out.write("    function loadFiles(input) {\r\n");
      out.write("    	var files = input.files;\r\n");
      out.write("        var maxFiles = parseInt(input.getAttribute('max'));\r\n");
      out.write("\r\n");
      out.write("        if (files.length > 3) {\r\n");
      out.write("            alert('최대 ' + maxFiles + '개의 파일만 업로드할 수 있습니다.');\r\n");
      out.write("            // 파일 업로드 막기 (선택한 파일 초기화)\r\n");
      out.write("            input.value = '';\r\n");
      out.write("        }\r\n");
      out.write("    	\r\n");
      out.write("        for (var i = 0; i < input.files.length && i < previewIds.length; i++) {\r\n");
      out.write("            var fr = new FileReader();\r\n");
      out.write("            var currentPreviewId = previewIds[i];\r\n");
      out.write("\r\n");
      out.write("            fr.onload = (function (previewId) {\r\n");
      out.write("                return function (event) {\r\n");
      out.write("                    document.getElementById(previewId).src = event.target.result;\r\n");
      out.write("                    document.getElementById(previewId).style.display = 'none';\r\n");
      out.write("                };\r\n");
      out.write("            })(currentPreviewId);\r\n");
      out.write("\r\n");
      out.write("            fr.readAsDataURL(input.files[i]);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        document.getElementById(previewIds[currentPreviewIndex]).style.display = 'inline-block';\r\n");
      out.write("    }\r\n");
      out.write("    function changePreviewIds(newIds) {\r\n");
      out.write("        for (var i = 0; i < previewIds.length; i++) {\r\n");
      out.write("            document.getElementById(previewIds[i]).style.display = 'none';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        previewIds = newIds;\r\n");
      out.write("        currentPreviewIndex = 0;\r\n");
      out.write("\r\n");
      out.write("        for (var j = 0; j < previewIds.length; j++) {\r\n");
      out.write("            document.getElementById(previewIds[j]).style.display = 'none';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        document.getElementById(previewIds[currentPreviewIndex]).style.display = 'inline-block';\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>상품추가하기</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write(" <img alt=\"\" id=\"preview1\" style=\"width: 250px; height: 300px; position: absolute; left: 195px; top: 100px;\" />\r\n");
      out.write("    <img alt=\"\" id=\"preview2\" style=\"width: 250px; height: 300px; position: absolute; left: 195px; top: 100px; display: none;\"/>\r\n");
      out.write("    <img alt=\"\" id=\"preview3\" style=\"width: 250px; height: 300px; position: absolute; left: 195px; top: 100px; display: none;\"/>\r\n");
      out.write("    <input type=\"button\" class=\"img\" onclick=\"changePreviewIds(['preview1'])\" style=\"position: absolute; left: 295px; top: 380px;\"/>\r\n");
      out.write("    <input type=\"button\" class=\"img\" onclick=\"changePreviewIds(['preview2'])\" style=\"position: absolute; left: 310px; top: 380px;\"/>\r\n");
      out.write("    <input type=\"button\" class=\"img\" onclick=\"changePreviewIds(['preview3'])\" style=\"position: absolute; left: 325px; top: 380px;\"/>\r\n");
      out.write("	<h1 align=\"center\">상품추가하기</h1>\r\n");
      out.write("	<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/productAdd.do\" enctype=\"multipart/form-data\"	method=\"post\">\r\n");
      out.write("		<table align=\"center\" border=1>\r\n");
      out.write("		<input type=\"hidden\" name=\"no\" value=\"1\" >\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>상품제목 : &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <input\r\n");
      out.write("					class=\"input\" type=\"text\" name=\"productName\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>상품가격 : &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n");
      out.write("					&nbsp; &nbsp; &nbsp; <input class=\"inputPrice\" type=\"number\"\r\n");
      out.write("					name=\"productPrice\">원\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>거래방법 : &nbsp; &nbsp; &nbsp; <input type=\"radio\"\r\n");
      out.write("					name=\"method\" value=\"0\">직거래 <input type=\"radio\"\r\n");
      out.write("					name=\"method\" value=\"1\">택배 <input type=\"radio\"\r\n");
      out.write("					name=\"method\" value=\"2\">다른 서비스 <input type=\"radio\"\r\n");
      out.write("					name=\"method\" value=\"3\">상관없음\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>경매여부 : &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <input\r\n");
      out.write("					type=\"radio\" name=\"is_auction\" value=\"0\">일반판매 <input\r\n");
      out.write("					type=\"radio\" name=\"is_auction\" value=\"1\">경매판매\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>상품 카테고리 : &nbsp; &nbsp; &nbsp; <input type=\"radio\"\r\n");
      out.write("					name=\"category\" value=\"1\">디지털 <input type=\"radio\"\r\n");
      out.write("					name=\"category\" value=\"2\">의류 <input type=\"radio\"\r\n");
      out.write("					name=\"category\" value=\"3\">가구 <input type=\"radio\"\r\n");
      out.write("					name=\"category\" value=\"4\">기타\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"fileInput\">다중 파일(최대3개) 선택:</label> <input\r\n");
      out.write("					type=\"file\" name=\"files[]\" id=\"fileInput\" accept=\"image/*\" max=\"3\"\r\n");
      out.write("					onchange=\"loadFiles(this)\" multiple>\r\n");
      out.write("					<br>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=\"Content\">상품정보\r\n");
      out.write("					<hr>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><textarea name=\"productContent\" width=\"400\"></textarea></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"text-align: center; padding: 10px;\"><input\r\n");
      out.write("					type=\"button\" value=\"등록하기\" onclick=\"validCheck(form)\"> <input\r\n");
      out.write("					type=\"button\" value=\"메인으로\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/main.do'\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("	function validCheck(form) {\r\n");
      out.write("		if (!form.productName.value.trim()) {\r\n");
      out.write("			alert(\"상품 이름을 입력하세요\")\r\n");
      out.write("			form.productName.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (!form.productPrice.value.trim()) {\r\n");
      out.write("			alert(\"상품 가격을 입력하세요\")\r\n");
      out.write("			form.productPrice.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (!form.method.value) {\r\n");
      out.write("			alert(\"거래방법을 선택하세요\");\r\n");
      out.write("			form.method.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		if (!form.is_auction.value) {\r\n");
      out.write("			alert(\"판매방법을 선택하세요\");\r\n");
      out.write("			form.is_auction.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (!form.category.value) {\r\n");
      out.write("			alert(\"카테고리를 선택하세요\");\r\n");
      out.write("			form.category.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (!form.productContent.value.trim()) {\r\n");
      out.write("			alert(\"상품 내용을 입력해주세요\");\r\n");
      out.write("			form.productContent.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} \r\n");
      out.write("	/* 	if (Number(form.productPrice.value.trim()) < 1000) {\r\n");
      out.write("				alert(\"상품 가격을 1000원 이상 입력해주세요\");\r\n");
      out.write("				form.productPrice.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			} */\r\n");
      out.write("\r\n");
      out.write("		// 최대 3개의 파일만 허용\r\n");
      out.write("		form.submit();\r\n");
      out.write("	}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/product/productAdd.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /WEB-INF/product/productAdd.jsp(4,0) name = value type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/product/productAdd.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
